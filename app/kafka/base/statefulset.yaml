apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: kafka
  labels:
    app: kafka
spec:
  replicas: 3
  selector:
    matchLabels:
      app: kafka
  serviceName: kafka-headless
  template:
    metadata:
      labels:
        app: kafka
    spec:
      terminationGracePeriodSeconds: 30
      initContainers:
        - name: wait-for-zookeeper
          image: busybox:1.36
          command:
            [
              "sh",
              "-c",
              'until nc -vz -w 2 zookeeper-svc.zookeeper-system.svc.cluster.local 2181; do echo "Waiting for Zookeeper..."; sleep 2; done;',
            ]
      containers:
        - name: kafka
          image: confluentinc/cp-kafka:7.6.1
          ports:
            - containerPort: 9092
              name: inside
            - containerPort: 9093
              name: outside
          env:
            - name: KAFKA_BROKER_ID_COMMAND
              value: "echo $HOSTNAME | awk -F'-' '{print $NF}'"
            - name: KAFKA_ZOOKEEPER_CONNECT
              value: "zookeeper-svc.zookeeper-system.svc.cluster.local:2181"
            - name: KAFKA_LISTENERS
              value: "INTERNAL://:9092"
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: KAFKA_ADVERTISED_LISTENERS
              value: "INTERNAL://$(POD_NAME).kafka-headless.kafka-system.svc.cluster.local:9092"
            - name: KAFKA_LISTENER_SECURITY_PROTOCOL_MAP
              value: "INTERNAL:PLAINTEXT"
            - name: KAFKA_INTER_BROKER_LISTENER_NAME
              value: "INTERNAL"
            - name: KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR
              value: "3"
            - name: KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR
              value: "3"
            - name: KAFKA_TRANSACTION_STATE_LOG_MIN_ISR
              value: "2"
            - name: KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS
              value: "0"
            - name: KAFKA_HEAP_OPTS
              value: "-Xms256m -Xmx256m"
          resources:
            requests:
              memory: "512Mi"
              cpu: "200m"
            limits:
              memory: "1Gi"
              cpu: "500m"
          volumeMounts:
            - name: kafka-data
              mountPath: /var/lib/kafka/data
  volumeClaimTemplates:
    - metadata:
        name: kafka-data
      spec:
        accessModes: ["ReadWriteOnce"]
        storageClassName: local-path
        resources:
          requests:
            storage: 8Gi
